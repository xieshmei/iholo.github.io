<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xie sh&#39;s blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://iholo.me/"/>
  <updated>2017-07-08T12:16:28.264Z</updated>
  <id>http://iholo.me/</id>
  
  <author>
    <name>Xie sh</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://iholo.me/2017/07/08/%E4%BD%BF%E7%94%A8Commons%20Email%20%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/"/>
    <id>http://iholo.me/2017/07/08/使用Commons Email 发送邮件/</id>
    <published>2017-07-08T12:16:16.028Z</published>
    <updated>2017-07-08T12:16:28.264Z</updated>
    
    <content type="html"><![CDATA[<h1 id="使用Commons-Email-发送邮件"><a href="#使用Commons-Email-发送邮件" class="headerlink" title="使用Commons Email 发送邮件"></a>使用Commons Email 发送邮件</h1><p>标签（空格分隔）： Email</p>
<hr>
<p>##1.介绍<br>Apache Commons Eamil组件在Java mail的基础上进行了封装，简化了邮件的发送,它提供了几个类用于不同email类型的发送.<br>| 类       | 作用  |<br>| ——–   | —–:  |<br>| <figure class="highlight plain"><figcaption><span>| 用于简单邮件的发送 | </span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">| ```MultiPartEmail ```       |   包含附件类型的邮件   | </div><div class="line">| ```HtmlEmail```        |    HTML格式的文本邮件 |  </div><div class="line">|```ImageHtmlEmail```| 用于发送包含HTML模板的邮件|</div><div class="line">|```EmailAttachment```| 定义邮件附件  |</div><div class="line">##2.下载</div><div class="line">###2.1 官网下载</div><div class="line">官网下载：[Apache Commons Email 1.4](https://commons.apache.org/proper/commons-email/download_email.cgi)</div><div class="line">###2.2 Maven</div></pre></td></tr></table></figure></p>
<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-email -->
<pre><code>&lt;dependency&gt;
    &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;
    &lt;artifactId&gt;commons-email&lt;/artifactId&gt;
    &lt;version&gt;1.4&lt;/version&gt;
&lt;/dependency&gt;
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt; NOTE: Commons Email 依赖  `javax.mail`，`javax.activation `</div><div class="line"></div><div class="line">##3. 示例</div><div class="line">###3.1 SimpleEmail</div></pre></td></tr></table></figure>
<p>Email email = new SimpleEmail();<br>email.setHostName(“smtp.qq.com”);<br>email.setSmtpPort(465);<br>email.setAuthentication(“userName”, “passWord”);<br>email.setSSLOnConnect(true);<br>email.setFrom(“user@qq.com”);<br>email.setSubject(“邮件主题”);<br>email.setMsg(“邮件内容”);<br>email.addTo(“foo@bar.com”);<br>email.send();<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">###3.2 MultiPartEmail</div><div class="line">`MultiPartEmail`用于发送包含附件的邮件，其中附件使用`EmailAttachment`构建</div></pre></td></tr></table></figure></p>
<p>EmailAttachment attachment = new EmailAttachment();<br>attachment.setPath(“D:\Users\1.txt”);<br>attachment.setName(“照片”);<br>attachment.setDescription(“附件描述”);</p>
<p>MultiPartEmail email = new MultiPartEmail();<br>email.setHostName(HOST_NAME);<br>email.setSmtpPort(SMTP_PORT);<br>email.setAuthentication(USER_NAME, PASS_WORD);<br>email.setFrom(“user@qq.com”);<br>email.addTo(“touser@gmail.com”);<br>email.setSubject(“附件邮件测试”);<br>email.setMsg(“正文测试”);<br>email.attach(attachment);<br>String str=email.send();<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">###3.3 HtmlEmail</div><div class="line">`HtmlEmail`</div><div class="line"></div><div class="line">```Java</div><div class="line">  HtmlEmail email = new HtmlEmail();</div><div class="line">  email.setHostName(&quot;mail.myserver.com&quot;);</div><div class="line">  email.addTo(&quot;jdoe@somewhere.org&quot;, &quot;John Doe&quot;);</div><div class="line">  email.setFrom(&quot;me@apache.org&quot;, &quot;Me&quot;);</div><div class="line">  email.setSubject(&quot;Test email with inline image&quot;);</div><div class="line">  </div><div class="line">  // embed the image and get the content id</div><div class="line">  URL url = new URL(&quot;http://www.apache.org/images/asf_logo_wide.gif&quot;);</div><div class="line">  String cid = email.embed(url, &quot;Apache logo&quot;);</div><div class="line">  </div><div class="line">  // set the html message</div><div class="line">  email.setHtmlMsg(&quot;&lt;html&gt;The apache logo - &lt;img src=\&quot;cid:&quot;+cid+&quot;\&quot;&gt;&lt;/html&gt;&quot;);</div><div class="line"></div><div class="line">  // set the alternative message</div><div class="line">  email.setTextMsg(&quot;Your email client does not support HTML messages&quot;);</div><div class="line"></div><div class="line">  // send the email</div><div class="line">  email.send();</div></pre></td></tr></table></figure></p>
<p>###3.4 ImageHtmlEmail<br><code>ImageHtmlEmail</code>用于发送固定HTML模板的邮件<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// load your HTML email template</span></div><div class="line">  String htmlEmailTemplate = <span class="string">".... &lt;img src=\"http://www.apache.org/images/feather.gif\"&gt; ...."</span>;</div><div class="line"></div><div class="line">  <span class="comment">// define you base URL to resolve relative resource locations</span></div><div class="line">  URL url = <span class="keyword">new</span> URL(<span class="string">"http://www.apache.org"</span>);</div><div class="line"></div><div class="line">  <span class="comment">// create the email message</span></div><div class="line">  ImageHtmlEmail email = <span class="keyword">new</span> ImageHtmlEmail();</div><div class="line">  email.setDataSourceResolver(<span class="keyword">new</span> DataSourceUrlResolver(url));</div><div class="line">  email.setHostName(<span class="string">"mail.myserver.com"</span>);</div><div class="line">  email.addTo(<span class="string">"jdoe@somewhere.org"</span>, <span class="string">"John Doe"</span>);</div><div class="line">  email.setFrom(<span class="string">"me@apache.org"</span>, <span class="string">"Me"</span>);</div><div class="line">  email.setSubject(<span class="string">"Test email with inline image"</span>);</div><div class="line">  </div><div class="line">  <span class="comment">// set the html message</span></div><div class="line">  email.setHtmlMsg(htmlEmailTemplate);</div><div class="line"></div><div class="line">  <span class="comment">// set the alternative message</span></div><div class="line">  email.setTextMsg(<span class="string">"Your email client does not support HTML messages"</span>);</div><div class="line"></div><div class="line">  <span class="comment">// send the email</span></div><div class="line">  email.send();</div></pre></td></tr></table></figure></p>
<hr>
<p>参考:<a href="https://commons.apache.org/proper/commons-email/index.html" target="_blank" rel="external">Commail Email官网</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;使用Commons-Email-发送邮件&quot;&gt;&lt;a href=&quot;#使用Commons-Email-发送邮件&quot; class=&quot;headerlink&quot; title=&quot;使用Commons Email 发送邮件&quot;&gt;&lt;/a&gt;使用Commons Email 发送邮件&lt;/h1&gt;&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://iholo.me/2017/03/16/%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    <id>http://iholo.me/2017/03/16/快速排序算法/</id>
    <published>2017-03-16T05:55:22.326Z</published>
    <updated>2017-03-16T06:11:07.979Z</updated>
    
    <content type="html"><![CDATA[<p>快速排序是C.R.A.Hoare于1962年提出的一种划分交换排序。它采用了一种分治的策略，通常称其为分治法(Divide-and-ConquerMethod)。</p>
<p>该方法的基本思想是：</p>
<ol>
<li>先从数列中取出一个数作为基准数。</li>
<li>分区过程，将比这个数大的数全放到它的右边，小于或等于它的数全放到它的左边。</li>
<li>再对左右区间重复第二步，直到各区间只有一个数。<br>虽然快速排序称为分治法，但分治法这三个字显然无法很好的概括快速排序的全部步骤。因此我的对快速排序作了进一步的说明：挖坑填数+分治法：</li>
</ol>
<p>先来看实例吧，定义下面再给出（最好能用自己的话来总结定义，这样对实现代码会有帮助）。<br>以一个数组作为示例，取区间第一个数为基准数。</p>
<table>
<thead>
<tr>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>==<em>72 </em>==</td>
<td>6</td>
<td>57</td>
<td>88</td>
<td>60</td>
<td>42</td>
<td>83</td>
<td>73</td>
<td>48</td>
<td>85</td>
</tr>
</tbody>
</table>
<p>初始时，i = 0;  j = 9;   X = a[i] = 72</p>
<p>由于已经将a[0]中的数保存到X中，可以理解成在数组a[0]上挖了个坑，可以将其它数据填充到这来。</p>
<p>从j开始向前找一个比X小或等于X的数。当j=8，符合条件，将a[8]挖出再填到上一个坑a[0]中。a[0]=a[8]; i++;  这样一个坑a[0]就被搞定了，但又形成了一个新坑a[8]，这怎么办了？简单，再找数字来填a[8]这个坑。这次从i开始向后找一个大于X的数，当i=3，符合条件，将a[3]挖出再填到上一个坑中a[8]=a[3]; j–;</p>
<table>
<thead>
<tr>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>==<em>48 </em>==</td>
<td>6</td>
<td>57</td>
<td>88</td>
<td>60</td>
<td>42</td>
<td>83</td>
<td>73</td>
<td>88</td>
<td>85</td>
</tr>
</tbody>
</table>
<p> i = 3;   j = 7;   X=72</p>
<p>再重复上面的步骤，先从后向前找，再从前向后找。</p>
<p>从j开始向前找，当j=5，符合条件，将a[5]挖出填到上一个坑中，a[3] = a[5]; i++;</p>
<p>从i开始向后找，当i=5时，由于i==j退出。</p>
<p>此时，i = j = 5，而a[5]刚好又是上次挖的坑，因此将X填入a[5]。</p>
<p>数组变为：</p>
<table>
<thead>
<tr>
<th>0</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
</tr>
</thead>
<tbody>
<tr>
<td>==<em>48 </em>==</td>
<td>6</td>
<td>57</td>
<td>42</td>
<td>60</td>
<td>72</td>
<td>83</td>
<td>73</td>
<td>88</td>
<td>85</td>
</tr>
</tbody>
</table>
<p>可以看出a[5]前面的数字都小于它，a[5]后面的数字都大于它。因此再对a[0…4]和a[6…9]这二个子区间重复上述步骤就可以了。</p>
<p>对挖坑填数进行总结</p>
<ol>
<li>i =L; j = R; 将基准数挖出形成第一个坑a[i]。</li>
<li>j–由后向前找比它小的数，找到后挖出此数填前一个坑a[i]中。</li>
<li>i++由前向后找比它大的数，找到后也挖出此数填到前一个坑a[j]中。</li>
<li>再重复执行2，3二步，直到i==j，将基准数填入a[i]中。</li>
</ol>
<p>照着这个总结很容易实现挖坑填数的代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort1</span><span class="params">(<span class="keyword">int</span> s[], <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (l &lt; r)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">int</span> i = AdjustArray(s, l, r);<span class="comment">//先成挖坑填数法调整s[]</span></div><div class="line">        quick_sort1(s, l, i - <span class="number">1</span>); <span class="comment">// 递归调用</span></div><div class="line">        quick_sort1(s, i + <span class="number">1</span>, r);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>再写分治法的代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort1</span><span class="params">(<span class="keyword">int</span> s[], <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (l &lt; r)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">int</span> i = AdjustArray(s, l, r);<span class="comment">//先成挖坑填数法调整s[]</span></div><div class="line">        quick_sort1(s, l, i - <span class="number">1</span>); <span class="comment">// 递归调用</span></div><div class="line">        quick_sort1(s, i + <span class="number">1</span>, r);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这样的代码显然不够简洁，对其组合整理下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort1</span><span class="params">(<span class="keyword">int</span> s[], <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (l &lt; r)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">int</span> i = AdjustArray(s, l, r);<span class="comment">//先成挖坑填数法调整s[]</span></div><div class="line">        quick_sort1(s, l, i - <span class="number">1</span>); <span class="comment">// 递归调用</span></div><div class="line">        quick_sort1(s, i + <span class="number">1</span>, r);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;快速排序是C.R.A.Hoare于1962年提出的一种划分交换排序。它采用了一种分治的策略，通常称其为分治法(Divide-and-ConquerMethod)。&lt;/p&gt;
&lt;p&gt;该方法的基本思想是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先从数列中取出一个数作为基准数。&lt;/li&gt;
&lt;l
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://iholo.me/2017/03/05/hello-world/"/>
    <id>http://iholo.me/2017/03/05/hello-world/</id>
    <published>2017-03-05T02:39:48.521Z</published>
    <updated>2017-03-05T09:41:17.946Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
      <category term="科技" scheme="http://iholo.me/categories/%E7%A7%91%E6%8A%80/"/>
    
    
      <category term="python" scheme="http://iholo.me/tags/python/"/>
    
      <category term="java" scheme="http://iholo.me/tags/java/"/>
    
  </entry>
  
</feed>
